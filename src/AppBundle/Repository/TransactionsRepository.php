<?php

namespace AppBundle\Repository;

/**
 * TransactionsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TransactionsRepository extends \Doctrine\ORM\EntityRepository
{
	public function getTransactions($type,$submitter,$status,$startDate,$endDate){
          
          $em = $this->getEntityManager();
          
              
               $result = $em->createQuery('select a.id,
                         	 a.createdDate,
            CONCAT(b.firstName,b.lastName)as submitter,
           a.transactionType as transaction_type,
           a.status,
           a.totalAmount from AppBundle:Transactions a
           inner join AppBundle:User b WITH a.userId = b.id
           WHERE a.transactionType = :a or a.userId = :b or a.transactionType = :c or a.createdDate between :d and :e
');
              $result->setParameter('a',$type);
              $result->setParameter('b',$submitter);
              $result->setParameter('c',$status);
              $result->setParameter('d',$startDate);
              $result->setParameter('e',$endDate);
          
                  
  
        
                  $results = $result->getResult();
                  return $results;
    }

    public function getTotalAmount($type,$submitter,$status,$startDate,$endDate){
          
          $em = $this->getEntityManager();
          
              
               $result = $em->getConnection()->prepare('select
           FORMAT(SUM(a.total_amount),2) as totalAmount from transactions a
           inner join fos_user b on a.user_id = b.id
           WHERE a.transaction_type = :a or a.user_id = :b or a.transaction_type = :c or a.created_date between :d and :e
');
              $result->bindValue('a',$type);
              $result->bindValue('b',$submitter);
              $result->bindValue('c',$status);
              $result->bindValue('d',$startDate);
              $result->bindValue('e',$endDate);
              $result->execute();
          
                  
  
        
                  $results = $result->fetchAll();
                  return $results;
    }


    public function getSubmitter(){
          
          $em = $this->getEntityManager();
          
              
               $result = $em->createQuery('select distinct
            CONCAT(b.firstName,b.lastName)as submitter,
            b.id 
           from AppBundle:Transactions a
           inner join AppBundle:User b WITH a.userId = b.id');
          
                  
  
        
                  $results = $result->getResult();
                  return $results;
    }
}
