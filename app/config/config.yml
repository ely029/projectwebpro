imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    app.path.purchase_images: /uploads/images/purchase

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    translator: ~
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
#        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
        save_path: '%kernel.project_dir%/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        # local
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'

        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration Original
# default
# swiftmailer:
#     transport: '%mailer_transport%'
#     host: '%mailer_host%'
#     username: '%mailer_user%'
#     password: '%mailer_password%'

# FOSUserBundle
fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    registration:
        form:
            type: AppBundle\Form\RegistrationType
            validation_groups: [Registration]
    service:
        mailer: fos_user.mailer.twig_swift
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"
    resetting:
        retry_ttl: 3600 # Value in seconds, logic will use as hours
        email:
            from_email:
                address: credentials@projectprohub.com
                sender_name: credentials@projectprohub.com

# FOSRestBundle
#fos_rest:
#    routing_loader:
#        default_format: json                            # All responses should be JSON formated
#        include_format: false                           # We do not include format in request, so that all responses
#                                                        # will eventually be JSON formated
#    format_listener:
#        rules:
#            - { priorities: ['json', 'xml'], fallback_format: json, prefer_extension: false }
#    view:
#        view_response_listener: true

# JMSSerializer
jms_serializer:
    metadata:
        auto_detection: true
        directories:
            FOSUser:
                namespace_prefix: "FOS\\UserBundle"
                path: '%kernel.root_dir%/Resources/config/serializer'

# Default Vich Uploader
#vich_uploader:
#    db_driver: orm
#    mappings:
#        purchase_images:
#            uri_prefix:         '%app.path.purchase_images%'
#            upload_destination: '%kernel.root_dir%/../web/uploads/images/purchase'
#            namer:              vich_uploader.namer_uniqid


# Temp Vich Uploader
vich_uploader:
    db_driver: orm
    storage: gaufrette
    mappings:
        purchase_images:
            uri_prefix:         https://s3.amazonaws.com/projectpro-live/purchase_images
            upload_destination: purchase_image_fs
            namer:              vich_uploader.namer_uniqid
            #https://s3-us-west-2.amazonaws.com/projectpro-staging/purchase_images


# Gaufrette
knp_gaufrette:
    stream_wrapper: ~
    adapters:
        purchase_image_adapter:
            aws_s3:
                service_id: "marksegalle.aws_s3.client"
                bucket_name:  "projectpro-live"
                options:
                    directory:  "purchase_images"
    filesystems:
        purchase_image_fs:
            adapter:  purchase_image_adapter